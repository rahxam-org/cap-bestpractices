# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: commit

on:
  push:
    branches-ignore: ['main', 'dev']

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/app/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Branch name as environment Variable
        run: echo "BRANCH=${GITHUB_REF##*/}"  >> $GITHUB_ENV

      - name: create default-env.json
        run: |
          ls
          mv default-env.json.bak default-env.json

      - name: Install srv
        run: |
          npm ci
          npm run lint

      - name: Install app
        run: |
          cd app
          npm ci
          npm run lint

      - name: Install app tests
        run: |
          cd app/test
          npm i

      - name: Install mockserver
        run: |
          cd mockserver
          npm i

      - name: srv API tests
        run: npm run test:with-mockserver

      - name: Publish Test Report srv
        uses: mikepenz/action-junit-report@v2
        if: always() # always run even if the previous step fails
        with:
          report_paths: 'test-results.xml'

      - name: UI tests
        run: |
          cd app/test
          npm run test:ci

      - name: Publish Test Report UI
        uses: mikepenz/action-junit-report@v2
        if: always() # always run even if the previous step fails
        with:
          report_paths: 'app/test/reports/junit/*.xml'

      - name: Check licenses
        run: |
          npx github:rahxam/license-checker --production --json --excludePrivatePackages --omitVersion --excludePackages='
          ;@sap/approuter;@sap/e2e-trace;@sap/audit-logging;@sap/logging;@sap/xsenv;@sap/xssec;tweetnacl;
          ' --onlyAllow='MIT;
          ISC;
          Apache-2.0;
          BSD;
          new BSD;
          Simplified BSD;
          CC-BY-4.0;
          CC0-1.0;
          CC-BY-3.0;
          BSD-like;
          (MIT AND Zlib);
          MIT/X11;
          Apache;
          THE DERIVED BEER-WARE LICENSE;
          BSD Zero Clause License;
          Custom: https://tools.hana.ondemand.com/developer-license-3;
          Custom: https://cap.cloud.sap;
          Custom: https://www.sap.com/products/hana.html;'
          cd app
          npx github:rahxam/license-checker --production --json --excludePrivatePackages --omitVersion --excludePackages='
          ;@sap/approuter;@sap/e2e-trace;@sap/audit-logging;@sap/logging;@sap/xsenv;@sap/xssec;tweetnacl;
          ' --onlyAllow='MIT;
          ISC;
          Apache-2.0;
          BSD;
          new BSD;
          Simplified BSD;
          CC-BY-4.0;
          CC0-1.0;
          CC-BY-3.0;
          BSD-like;
          (MIT AND Zlib);
          MIT/X11;
          Apache;
          THE DERIVED BEER-WARE LICENSE;
          BSD Zero Clause License;
          Custom: https://tools.hana.ondemand.com/developer-license-3;
          Custom: https://cap.cloud.sap;
          Custom: https://www.sap.com/products/hana.html;'

      - name: Check for secrets
        uses: zricethezav/gitleaks-action@master

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: reports
          path: |
            reports/
            test-results.xml
            coverage/cobertura-coverage.xml
            app/coverage/cobertura-coverage.xml
            app/coverage/lcov-report/
            app/test/reports/
            app/test/allure-report/
            njsscan.html
            load-performance.json
            gl-dast-report.json
