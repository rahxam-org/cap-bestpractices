# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  push:
    branches-ignore: ['mainxx']

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/app/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Branch name as environment Variable
        run: echo "BRANCH=${GITHUB_REF##*/}"  >> $GITHUB_ENV

      - name: Install srv
        run:  |
          npm ci
          npm run lint
      - name: Install app
        run: |
          cd app
          npm ci
          npm run lint

  test:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: create default-env.json
        run: |
          ls
          mv default-env.json.bak default-env.json

      - name: Install srv
        run: npm i
      - name: Install app
        run: |
          cd app
          npm i
      - name: Install app tests
        run: |
          cd app/test
          npm i
      - name: Install mockserver
        run: |
          cd mockserver
          npm i

      - name: srv API tests
        run: npm run test:with-mockserver

      - name: UI tests
        run: |
          cd app/test
          npm run test:ci

      - uses: 5monkeys/cobertura-action@master
        name: srv coverage
        with:
          path: coverage/cobertura-coverage.xml
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          minimum_coverage: 75
      - name: Publish Test Report srv
        uses: mikepenz/action-junit-report@v2
        if: always() # always run even if the previous step fails
        with:
          report_paths: 'junit.xml'

      - uses: 5monkeys/cobertura-action@master
        name: App coverage
        with:
          path: app/coverage/cobertura-coverage.xml
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          minimum_coverage: 75
      - name: Publish Test Report app
        uses: mikepenz/action-junit-report@v2
        if: always() # always run even if the previous step fails
        with:
          report_paths: 'app/test/reports/junit/*.xml'

      - name: nodejsscan scan
        id: njsscan
        uses: ajinabraham/njsscan-action@master
        with:
          args: '. --html --output njsscan.html || true'
      - name: Check for secrets
        uses: zricethezav/gitleaks-action@master
        
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: reports
          path: |
            reports/
            junit.xml
            coverage/cobertura-coverage.xml
            app/coverage/cobertura-coverage.xml
            app/coverage/lcov-report/
            app/test/reports/
            app/test/allure-report/
            njsscan.sarif
            
      - name: Perform license checks
        id: license-check
        uses: ralexander-phi/license_approval@master
        with:
          package_manager: 'npm'

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.3.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'owasp/zap2docker-stable'
          target: 'https://www.zaproxy.org/'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a -J gl-dast-report.json'
          
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: reports
          path: |
            gl-dast-report.json
      - name: Configure committer
        run: |
          git config user.name "GitHub Actions Version Bot"
          git config user.email "<>"
      - name: Bump version
        uses: qzb/standard-version-action@v1.0.1

      # Replaced by dependabot
      # - uses: oke-py/npm-audit-action@v1.8.2
      #   name: backend audit
      #   with:
      #     audit_level: moderate
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     issue_labels: vulnerability
      #     dedupe_issues: true
      #     create_issues: false
      #     production_flag: true

      # - uses: oke-py/npm-audit-action@v1.8.2
      #   name: app audit
      #   with:
      #     audit_level: moderate
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     issue_labels: vulnerability
      #     dedupe_issues: true
      #     create_issues: false
      #     production_flag: true
      #     working_directory: app

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: logs
